{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","onDelete","id","CreateArea","useState","note","setNote","handleChange","event","target","name","value","preNote","onChange","placeholder","rows","onAdd","preventDefault","App","notes","setNotes","deleteNote","prevNotes","filter","noteItem","index","newNote","preNotes","map","key","ReactDOM","render","document","getElementById"],"mappings":"wKAOeA,MANf,WACA,OAAQ,gCACJ,wCCOWC,MATf,WACI,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACI,gCACI,+CAAgBF,EAAhB,OCUGG,MAbf,SAAcC,GAIV,OACI,yBAAKC,UAAY,QACjB,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BAAQC,QAPZ,WACIJ,EAAMK,SAASL,EAAMM,MAMrB,Y,cC2BOC,MAnCf,SAAoBP,GAChB,MAAwBQ,mBAAS,CAC7BN,MAAO,GACPC,QAAS,KAFb,mBAAOM,EAAP,KAAaC,EAAb,KAKA,SAASC,EAAaC,GAClB,MAAsBA,EAAMC,OAArBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACbL,GAAQ,SAACM,GACL,OAAO,2BACAA,GADP,kBAEKF,EAAOC,OAapB,OACI,6BACI,8BACI,2BAAOD,KAAK,QAAQC,MAAON,EAAKP,MAAOe,SAAUN,EAAcO,YAAY,UAC3E,8BAAUJ,KAAK,UAAUC,MAAON,EAAKN,QAASc,SAAUN,EAAcO,YAAY,iBAAiBC,KAAK,MACxG,4BAAQf,QAbpB,SAAoBQ,GAChBZ,EAAMoB,MAAMX,GACZC,EAAQ,CACJR,MAAO,GACPC,QAAS,KAEbS,EAAMS,mBAOE,UCODC,MA/Bf,WACI,MAA0Bd,mBAAS,IAAnC,mBAAOe,EAAP,KAAcC,EAAd,KAOA,SAASC,EAAWnB,GAChBkB,GAAS,SAACE,GACN,OAAOA,EAAUC,QAAO,SAACC,EAAUC,GAC/B,OAAOA,IAAUvB,QAI7B,OACA,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYc,MAfhB,SAAiBU,GACbN,GAAS,SAAAO,GACL,MAAM,GAAN,mBAAYA,GAAZ,CAAsBD,UAczBP,EAAMS,KAAI,SAACJ,EAAUC,GAAX,OACP,kBAAC,EAAD,CACIvB,GAAMuB,EACNI,IAAOJ,EACP3B,MAAS0B,EAAS1B,MAClBC,QAAWyB,EAASzB,QACpBE,SAAYoB,OAEpB,kBAAC,EAAD,QC3BRS,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.840a03a3.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction Header() {\r\nreturn (<header>\r\n    <h1>Keeper</h1>\r\n</header>);\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nfunction Footer() {\r\n    const year = new Date().getFullYear();\r\n    return(\r\n        <footer>\r\n            <p>Copyright â“’ {year} </p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nfunction Note(props) {\r\n    function handleClick() {\r\n        props.onDelete(props.id);\r\n    }\r\n    return (\r\n        <div className = \"note\">\r\n        <h1>{props.title}</h1>\r\n        <p>{props.content}</p>\r\n        <button onClick={handleClick}>DELETE</button>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Note;","import React, { useState } from \"react\";\r\n\r\nfunction CreateArea(props) {\r\n    const [note, setNote] = useState({\r\n        title: \"\",\r\n        content: \"\"\r\n    });\r\n\r\n    function handleChange(event) {\r\n        const {name, value} = event.target;\r\n        setNote((preNote) => {\r\n            return {\r\n                ...preNote,\r\n                [name]: value\r\n            };\r\n        });\r\n    }\r\n\r\n    function submitNote(event) {\r\n        props.onAdd(note);\r\n        setNote({\r\n            title: \"\",\r\n            content: \"\"    \r\n        });\r\n        event.preventDefault(); // prevent reloading \r\n    }\r\n    return (\r\n        <div>\r\n            <form>\r\n                <input name=\"title\" value={note.title} onChange={handleChange} placeholder=\"Title\"/>\r\n                <textarea name=\"content\" value={note.content} onChange={handleChange} placeholder=\"Take a note...\" rows=\"3\"/>\r\n                <button onClick={submitNote}>Add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateArea;","import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Note from \"./Note\";\r\nimport notes from \"../notes\";\r\nimport CreateArea from \"./CreateArea\"\r\n\r\nfunction App() {\r\n    const [notes, setNotes] = useState([]);\r\n\r\n    function addNote(newNote) {\r\n        setNotes(preNotes => {\r\n            return ([...preNotes, newNote]);\r\n        });   \r\n    }\r\n    function deleteNote(id) {\r\n        setNotes((prevNotes) => {\r\n            return prevNotes.filter((noteItem, index) => {\r\n                return index !== id;\r\n            });\r\n        });\r\n    }\r\n    return (\r\n    <div>\r\n        <Header />\r\n        <CreateArea onAdd={addNote}/>\r\n        {notes.map((noteItem, index) => (\r\n            <Note\r\n                id = {index}\r\n                key = {index} \r\n                title = {noteItem.title} \r\n                content = {noteItem.content}\r\n                onDelete = {deleteNote} />\r\n))} \r\n        <Footer/>\r\n    </div>);\r\n}\r\n\r\nexport default App;","//https://l1pp6.csb.app/\r\n\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));\r\n\r\n// Beak-down\r\n//1. Implement the add note functionality.\r\n//- Create a constant that keeps track of the title and content.\r\n//- Pass the new note back to the App.\r\n//- Add new note to an array.\r\n//- Take array and render seperate Note components for each item.\r\n\r\n//2. Implement the delete note functionality.\r\n//- Callback from the Note component to trigger a delete function.\r\n//- Use the filter function to filter out the item that needs deletion.\r\n//- Pass a id over to the Note component, pass it back to the App when deleting.\r\n"],"sourceRoot":""}